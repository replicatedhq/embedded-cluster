#!/usr/bin/env bash

test_functions() {
    grep ^func e2e/* 2>/dev/null | grep Test | cut -d: -f2 | cut -d " " -f2 | cut -d "(" -f1 | sort
}

main() {
    for func in $(test_functions); do
        fpath=$(echo ".github/workflows/e2e_$func.yaml" | tr '[:upper:]' '[:lower:]')
        echo "Creating workflow for $func on $fpath"
        cat << EOF > "$fpath"
# this file has been generated by e2e/hack/create-e2e-workflows.sh.
# edit there if you want to change something.
name: E2E - $func
on:
- pull_request
jobs:
  e2e:
    name: E2E - $func
    runs-on: ubuntu-latest
    steps:
    - name: Move Docker aside
      run: |
        sudo systemctl stop docker
        sudo iptables -F
        sudo iptables -P FORWARD ACCEPT
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install and Configure LXD
      run: |
        sudo lxd init --auto
        sudo snap set lxd daemon.group=adm
        sudo snap restart lxd
        sudo lxd waitready
    - name: Install and configure OVN
      run: |
        sudo apt install ovn-host ovn-central -y
        sudo ovs-vsctl set open_vswitch . \
          external_ids:ovn-remote=unix:/var/run/ovn/ovnsb_db.sock \
          external_ids:ovn-encap-type=geneve \
          external_ids:ovn-encap-ip=127.0.0.1
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: "1.21.0"
    - name: E2E tests ($func)
      run: |
        make e2e-test TEST_NAME=$func
EOF
    done
}

main
