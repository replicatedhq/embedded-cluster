Thank you for installing {{ .Chart.Name }}.

Your release is named {{ .Release.Name }}.

## Redis Server Component

The Redis server has been deployed with the following configuration:
- Replicas: {{ .Values.server.replicaCount }}
- Image: {{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}
- Port: {{ .Values.server.service.port }}

To connect to your Redis server:

1. Get the Redis service endpoint:
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "redis-app.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=server" -o jsonpath="{.items[0].metadata.name}")
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME {{ .Values.server.service.port }}:{{ .Values.server.service.port }}

2. Connect to Redis using redis-cli:
  redis-cli -h 127.0.0.1 -p {{ .Values.server.service.port }}

## Client Component

{{- if .Values.client.enabled }}
A Redis client has been configured to make periodic requests to the server:
- Image: {{ .Values.client.image.repository }}:{{ .Values.client.image.tag }}
- Interval: {{ .Values.client.intervalSeconds }} seconds

To view the client's test operations:

1. View the client logs:
  kubectl logs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=client" -f

2. The client is performing these operations every {{ .Values.client.intervalSeconds }} seconds:
   - Pinging the Redis server
   - Setting a test key with timestamp
   - Getting the test key value
{{- else }}
The client component is disabled. To enable it, set .Values.client.enabled=true
{{- end }} 