components:
  schemas:
    github_com_replicatedhq_embedded-cluster_api_types.Health:
      properties:
        status:
          type: string
      type: object
    github_com_replicatedhq_kotskinds_apis_kots_v1beta1.Config:
      properties:
        apiVersion:
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            +optional
          type: string
        kind:
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            +optional
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/github_com_replicatedhq_kotskinds_apis_kots_v1beta1.ConfigSpec'
        status:
          $ref: '#/components/schemas/github_com_replicatedhq_kotskinds_apis_kots_v1beta1.ConfigStatus'
      type: object
    github_com_replicatedhq_kotskinds_apis_kots_v1beta1.ConfigSpec:
      properties:
        groups:
          items:
            $ref: '#/components/schemas/v1beta1.ConfigGroup'
          type: array
          uniqueItems: false
      type: object
    github_com_replicatedhq_kotskinds_apis_kots_v1beta1.ConfigStatus:
      type: object
    github_com_replicatedhq_kotskinds_multitype.BoolOrString:
      type: object
    types.APIError:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/types.APIError'
          type: array
          uniqueItems: false
        field:
          type: string
        message:
          type: string
        status_code:
          type: integer
      type: object
    types.AuthRequest:
      properties:
        password:
          type: string
      type: object
    types.AuthResponse:
      properties:
        token:
          type: string
      type: object
    types.GetListAvailableNetworkInterfacesResponse:
      properties:
        networkInterfaces:
          items:
            type: string
          type: array
          uniqueItems: false
      type: object
    types.HostPreflightsOutput:
      properties:
        fail:
          items:
            $ref: '#/components/schemas/types.HostPreflightsRecord'
          type: array
          uniqueItems: false
        pass:
          items:
            $ref: '#/components/schemas/types.HostPreflightsRecord'
          type: array
          uniqueItems: false
        warn:
          items:
            $ref: '#/components/schemas/types.HostPreflightsRecord'
          type: array
          uniqueItems: false
      type: object
    types.HostPreflightsRecord:
      properties:
        message:
          type: string
        title:
          type: string
      type: object
    types.Infra:
      properties:
        components:
          items:
            $ref: '#/components/schemas/types.InfraComponent'
          type: array
          uniqueItems: false
        logs:
          type: string
        status:
          $ref: '#/components/schemas/types.Status'
      type: object
    types.InfraComponent:
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/types.Status'
      type: object
    types.InstallHostPreflightsStatusResponse:
      properties:
        allowIgnoreHostPreflights:
          type: boolean
        output:
          $ref: '#/components/schemas/types.HostPreflightsOutput'
        status:
          $ref: '#/components/schemas/types.Status'
        titles:
          items:
            type: string
          type: array
          uniqueItems: false
      type: object
    types.KubernetesInstallationConfig:
      properties:
        adminConsolePort:
          type: integer
        httpProxy:
          type: string
        httpsProxy:
          type: string
        noProxy:
          type: string
      type: object
    types.LinuxInfraSetupRequest:
      properties:
        ignoreHostPreflights:
          type: boolean
      type: object
    types.LinuxInstallationConfig:
      properties:
        adminConsolePort:
          type: integer
        dataDirectory:
          type: string
        globalCidr:
          type: string
        httpProxy:
          type: string
        httpsProxy:
          type: string
        localArtifactMirrorPort:
          type: integer
        networkInterface:
          type: string
        noProxy:
          type: string
        podCidr:
          type: string
        serviceCidr:
          type: string
      type: object
    types.PostInstallRunHostPreflightsRequest:
      properties:
        isUi:
          type: boolean
      type: object
    types.State:
      type: string
      x-enum-varnames:
      - StatePending
      - StateRunning
      - StateSucceeded
      - StateFailed
    types.Status:
      properties:
        description:
          type: string
        lastUpdated:
          type: string
        state:
          $ref: '#/components/schemas/types.State'
      type: object
    v1.FieldsV1:
      description: |-
        FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
        +optional
      type: object
    v1.ManagedFieldsEntry:
      properties:
        apiVersion:
          description: |-
            APIVersion defines the version of this resource that this field set
            applies to. The format is "group/version" just like the top-level
            APIVersion field. It is necessary to track the version of a field
            set because it cannot be automatically converted.
          type: string
        fieldsType:
          description: |-
            FieldsType is the discriminator for the different fields format and version.
            There is currently only one possible value: "FieldsV1"
          type: string
        fieldsV1:
          $ref: '#/components/schemas/v1.FieldsV1'
        manager:
          description: Manager is an identifier of the workflow managing these fields.
          type: string
        operation:
          $ref: '#/components/schemas/v1.ManagedFieldsOperationType'
        subresource:
          description: |-
            Subresource is the name of the subresource used to update that object, or
            empty string if the object was updated through the main resource. The
            value of this field is used to distinguish between managers, even if they
            share the same name. For example, a status update will be distinct from a
            regular update using the same manager name.
            Note that the APIVersion field is not related to the Subresource field and
            it always corresponds to the version of the main resource.
          type: string
        time:
          description: |-
            Time is the timestamp of when the ManagedFields entry was added. The
            timestamp will also be updated if a field is added, the manager
            changes any of the owned fields value or removes a field. The
            timestamp does not update when a field is removed from the entry
            because another manager took it over.
            +optional
          type: string
      type: object
    v1.ManagedFieldsOperationType:
      description: |-
        Operation is the type of operation which lead to this ManagedFieldsEntry being created.
        The only valid values for this field are 'Apply' and 'Update'.
      type: string
      x-enum-varnames:
      - ManagedFieldsOperationApply
      - ManagedFieldsOperationUpdate
    v1.ObjectMeta:
      properties:
        annotations:
          additionalProperties:
            type: string
          description: |-
            Annotations is an unstructured key value map stored with a resource that may be
            set by external tools to store and retrieve arbitrary metadata. They are not
            queryable and should be preserved when modifying objects.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
            +optional
          type: object
        creationTimestamp:
          description: |-
            CreationTimestamp is a timestamp representing the server time when this object was
            created. It is not guaranteed to be set in happens-before order across separate operations.
            Clients may not set this value. It is represented in RFC3339 form and is in UTC.

            Populated by the system.
            Read-only.
            Null for lists.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
          type: string
        deletionGracePeriodSeconds:
          description: |-
            Number of seconds allowed for this object to gracefully terminate before
            it will be removed from the system. Only set when deletionTimestamp is also set.
            May only be shortened.
            Read-only.
            +optional
          type: integer
        deletionTimestamp:
          description: |-
            DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
            field is set by the server when a graceful deletion is requested by the user, and is not
            directly settable by a client. The resource is expected to be deleted (no longer visible
            from resource lists, and not reachable by name) after the time in this field, once the
            finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
            Once the deletionTimestamp is set, this value may not be unset or be set further into the
            future, although it may be shortened or the resource may be deleted prior to this time.
            For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
            by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
            the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
            remove the pod from the API. In the presence of network partitions, this object may still
            exist after this timestamp, until an administrator or automated process can determine the
            resource is fully terminated.
            If not set, graceful deletion of the object has not been requested.

            Populated by the system when a graceful deletion is requested.
            Read-only.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
          type: string
        finalizers:
          description: |-
            Must be empty before the object is deleted from the registry. Each entry
            is an identifier for the responsible component that will remove the entry
            from the list. If the deletionTimestamp of the object is non-nil, entries
            in this list can only be removed.
            Finalizers may be processed and removed in any order.  Order is NOT enforced
            because it introduces significant risk of stuck finalizers.
            finalizers is a shared field, any actor with permission can reorder it.
            If the finalizer list is processed in order, then this can lead to a situation
            in which the component responsible for the first finalizer in the list is
            waiting for a signal (field value, external system, or other) produced by a
            component responsible for a finalizer later in the list, resulting in a deadlock.
            Without enforced ordering finalizers are free to order amongst themselves and
            are not vulnerable to ordering changes in the list.
            +optional
            +patchStrategy=merge
            +listType=set
          items:
            type: string
          type: array
          uniqueItems: false
        generateName:
          description: |-
            GenerateName is an optional prefix, used by the server, to generate a unique
            name ONLY IF the Name field has not been provided.
            If this field is used, the name returned to the client will be different
            than the name passed. This value will also be combined with a unique suffix.
            The provided value has the same validation rules as the Name field,
            and may be truncated by the length of the suffix required to make the value
            unique on the server.

            If this field is specified and the generated name exists, the server will return a 409.

            Applied only if Name is not specified.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
            +optional
          type: string
        generation:
          description: |-
            A sequence number representing a specific generation of the desired state.
            Populated by the system. Read-only.
            +optional
          type: integer
        labels:
          additionalProperties:
            type: string
          description: |-
            Map of string keys and values that can be used to organize and categorize
            (scope and select) objects. May match selectors of replication controllers
            and services.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
            +optional
          type: object
        managedFields:
          description: |-
            ManagedFields maps workflow-id and version to the set of fields
            that are managed by that workflow. This is mostly for internal
            housekeeping, and users typically shouldn't need to set or
            understand this field. A workflow can be the user's name, a
            controller's name, or the name of a specific apply path like
            "ci-cd". The set of fields is always in the version that the
            workflow used when modifying the object.

            +optional
            +listType=atomic
          items:
            $ref: '#/components/schemas/v1.ManagedFieldsEntry'
          type: array
          uniqueItems: false
        name:
          description: |-
            Name must be unique within a namespace. Is required when creating resources, although
            some resources may allow a client to request the generation of an appropriate name
            automatically. Name is primarily intended for creation idempotence and configuration
            definition.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
            +optional
          type: string
        namespace:
          description: |-
            Namespace defines the space within which each name must be unique. An empty namespace is
            equivalent to the "default" namespace, but "default" is the canonical representation.
            Not all objects are required to be scoped to a namespace - the value of this field for
            those objects will be empty.

            Must be a DNS_LABEL.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
            +optional
          type: string
        ownerReferences:
          description: |-
            List of objects depended by this object. If ALL objects in the list have
            been deleted, this object will be garbage collected. If this object is managed by a controller,
            then an entry in this list will point to this controller, with the controller field set to true.
            There cannot be more than one managing controller.
            +optional
            +patchMergeKey=uid
            +patchStrategy=merge
            +listType=map
            +listMapKey=uid
          items:
            $ref: '#/components/schemas/v1.OwnerReference'
          type: array
          uniqueItems: false
        resourceVersion:
          description: |-
            An opaque value that represents the internal version of this object that can
            be used by clients to determine when objects have changed. May be used for optimistic
            concurrency, change detection, and the watch operation on a resource or set of resources.
            Clients must treat these values as opaque and passed unmodified back to the server.
            They may only be valid for a particular resource or set of resources.

            Populated by the system.
            Read-only.
            Value must be treated as opaque by clients and .
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
          type: string
        selfLink:
          description: |-
            Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
            +optional
          type: string
        uid:
          description: |-
            UID is the unique in time and space value for this object. It is typically generated by
            the server on successful creation of a resource and is not allowed to change on PUT
            operations.

            Populated by the system.
            Read-only.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
            +optional
          type: string
      type: object
    v1.OwnerReference:
      properties:
        apiVersion:
          description: API version of the referent.
          type: string
        blockOwnerDeletion:
          description: |-
            If true, AND if the owner has the "foregroundDeletion" finalizer, then
            the owner cannot be deleted from the key-value store until this
            reference is removed.
            See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
            for how the garbage collector interacts with this field and enforces the foreground deletion.
            Defaults to false.
            To set this field, a user needs "delete" permission of the owner,
            otherwise 422 (Unprocessable Entity) will be returned.
            +optional
          type: boolean
        controller:
          description: |-
            If true, this reference points to the managing controller.
            +optional
          type: boolean
        kind:
          description: |-
            Kind of the referent.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        name:
          description: |-
            Name of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
          type: string
        uid:
          description: |-
            UID of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
          type: string
      type: object
    v1beta1.ConfigChildItem:
      properties:
        default:
          $ref: '#/components/schemas/github_com_replicatedhq_kotskinds_multitype.BoolOrString'
        name:
          type: string
        recommended:
          type: boolean
        title:
          type: string
        value:
          $ref: '#/components/schemas/github_com_replicatedhq_kotskinds_multitype.BoolOrString'
      type: object
    v1beta1.ConfigGroup:
      properties:
        description:
          type: string
        items:
          items:
            $ref: '#/components/schemas/v1beta1.ConfigItem'
          type: array
          uniqueItems: false
        name:
          type: string
        title:
          type: string
        when:
          type: string
      type: object
    v1beta1.ConfigItem:
      properties:
        affix:
          type: string
        countByGroup:
          additionalProperties:
            type: integer
          type: object
        data:
          type: string
        default:
          $ref: '#/components/schemas/github_com_replicatedhq_kotskinds_multitype.BoolOrString'
        error:
          type: string
        filename:
          type: string
        help_text:
          type: string
        hidden:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/v1beta1.ConfigChildItem'
          type: array
          uniqueItems: false
        minimumCount:
          type: integer
        multi_value:
          items:
            type: string
          type: array
          uniqueItems: false
        multiple:
          type: boolean
        name:
          type: string
        readonly:
          type: boolean
        recommended:
          type: boolean
        repeatable:
          type: boolean
        required:
          type: boolean
        templates:
          items:
            $ref: '#/components/schemas/v1beta1.RepeatTemplate'
          type: array
          uniqueItems: false
        title:
          type: string
        type:
          type: string
        validation:
          $ref: '#/components/schemas/v1beta1.ConfigItemValidation'
        value:
          $ref: '#/components/schemas/github_com_replicatedhq_kotskinds_multitype.BoolOrString'
        valuesByGroup:
          $ref: '#/components/schemas/v1beta1.ValuesByGroup'
        when:
          type: string
        write_once:
          type: boolean
      type: object
    v1beta1.ConfigItemValidation:
      properties:
        regex:
          $ref: '#/components/schemas/v1beta1.RegexValidator'
      type: object
    v1beta1.GroupValues:
      additionalProperties:
        type: string
      type: object
    v1beta1.RegexValidator:
      properties:
        message:
          type: string
        pattern:
          type: string
      type: object
    v1beta1.RepeatTemplate:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        name:
          type: string
        namespace:
          type: string
        yamlPath:
          type: string
      type: object
    v1beta1.ValuesByGroup:
      additionalProperties:
        $ref: '#/components/schemas/v1beta1.GroupValues'
      type: object
  securitySchemes:
    bearerauth:
      bearerFormat: JWT
      scheme: bearer
      type: http
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact:
    email: support@replicated.com
    name: API Support
    url: https://github.com/replicatedhq/embedded-cluster/issues
  description: This is the API for the Embedded Cluster project.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Embedded Cluster API
  version: "0.1"
openapi: 3.1.0
paths:
  /auth/login:
    post:
      description: Authenticate a user
      operationId: postAuthLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.AuthRequest'
        description: Auth Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.AuthResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.APIError'
          description: Unauthorized
      summary: Authenticate a user
      tags:
      - auth
  /console/available-network-interfaces:
    get:
      description: List available network interfaces
      operationId: getConsoleListAvailableNetworkInterfaces
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.GetListAvailableNetworkInterfacesResponse'
          description: OK
      summary: List available network interfaces
      tags:
      - console
  /health:
    get:
      description: get the health of the API
      operationId: getHealth
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/github_com_replicatedhq_embedded-cluster_api_types.Health'
          description: OK
      summary: Get the health of the API
      tags:
      - health
  /kubernetes/install/app/config:
    get:
      description: get the app config
      operationId: getKubernetesInstallAppConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/github_com_replicatedhq_kotskinds_apis_kots_v1beta1.Config'
          description: OK
      security:
      - bearerauth: []
      summary: Get the app config
      tags:
      - kubernetes-install
  /kubernetes/install/infra/setup:
    post:
      description: Setup infra components
      operationId: postKubernetesInstallSetupInfra
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Infra'
          description: OK
      security:
      - bearerauth: []
      summary: Setup infra components
      tags:
      - kubernetes-install
  /kubernetes/install/infra/status:
    get:
      description: Get the current status of the infra
      operationId: getKubernetesInstallInfraStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Infra'
          description: OK
      security:
      - bearerauth: []
      summary: Get the status of the infra
      tags:
      - kubernetes-install
  /kubernetes/install/installation/config:
    get:
      description: get the Kubernetes installation config
      operationId: getKubernetesInstallInstallationConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.KubernetesInstallationConfig'
          description: OK
      security:
      - bearerauth: []
      summary: Get the Kubernetes installation config
      tags:
      - kubernetes-install
  /kubernetes/install/installation/configure:
    post:
      description: configure the Kubernetes installation for install
      operationId: postKubernetesInstallConfigureInstallation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.KubernetesInstallationConfig'
        description: Installation config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Status'
          description: OK
      security:
      - bearerauth: []
      summary: Configure the Kubernetes installation for install
      tags:
      - kubernetes-install
  /kubernetes/install/installation/status:
    get:
      description: Get the current status of the installation configuration for install
      operationId: getKubernetesInstallInstallationStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Status'
          description: OK
      security:
      - bearerauth: []
      summary: Get installation configuration status for install
      tags:
      - kubernetes-install
  /linux/install/app/config:
    get:
      description: get the app config
      operationId: getLinuxInstallAppConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/github_com_replicatedhq_kotskinds_apis_kots_v1beta1.Config'
          description: OK
      security:
      - bearerauth: []
      summary: Get the app config
      tags:
      - linux-install
  /linux/install/host-preflights/run:
    post:
      description: Run install host preflight checks using installation config and
        client-provided data
      operationId: postLinuxInstallRunHostPreflights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.PostInstallRunHostPreflightsRequest'
        description: Post Install Run Host Preflights Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.InstallHostPreflightsStatusResponse'
          description: OK
      security:
      - bearerauth: []
      summary: Run install host preflight checks
      tags:
      - linux-install
  /linux/install/host-preflights/status:
    get:
      description: Get the current status and results of host preflight checks for
        install
      operationId: getLinuxInstallHostPreflightsStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.InstallHostPreflightsStatusResponse'
          description: OK
      security:
      - bearerauth: []
      summary: Get host preflight status for install
      tags:
      - linux-install
  /linux/install/infra/setup:
    post:
      description: Setup infra components
      operationId: postLinuxInstallSetupInfra
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.LinuxInfraSetupRequest'
        description: Infra Setup Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Infra'
          description: OK
      security:
      - bearerauth: []
      summary: Setup infra components
      tags:
      - linux-install
  /linux/install/infra/status:
    get:
      description: Get the current status of the infra
      operationId: getLinuxInstallInfraStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Infra'
          description: OK
      security:
      - bearerauth: []
      summary: Get the status of the infra
      tags:
      - linux-install
  /linux/install/installation/config:
    get:
      description: get the installation config
      operationId: getLinuxInstallInstallationConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.LinuxInstallationConfig'
          description: OK
      security:
      - bearerauth: []
      summary: Get the installation config
      tags:
      - linux-install
  /linux/install/installation/configure:
    post:
      description: configure the installation for install
      operationId: postLinuxInstallConfigureInstallation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.LinuxInstallationConfig'
        description: Installation config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Status'
          description: OK
      security:
      - bearerauth: []
      summary: Configure the installation for install
      tags:
      - linux-install
  /linux/install/installation/status:
    get:
      description: Get the current status of the installation configuration for install
      operationId: getLinuxInstallInstallationStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Status'
          description: OK
      security:
      - bearerauth: []
      summary: Get installation configuration status for install
      tags:
      - linux-install
servers:
- url: /api
