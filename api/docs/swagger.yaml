basePath: /api
definitions:
  types.APIError:
    properties:
      errors:
        items:
          $ref: '#/definitions/types.APIError'
        type: array
      field:
        type: string
      message:
        type: string
      status_code:
        type: integer
    type: object
  types.AuthRequest:
    properties:
      password:
        type: string
    type: object
  types.AuthResponse:
    properties:
      token:
        type: string
    type: object
  types.Health:
    properties:
      status:
        type: string
    type: object
  types.HostPreflightsOutput:
    properties:
      fail:
        items:
          $ref: '#/definitions/types.HostPreflightsRecord'
        type: array
      pass:
        items:
          $ref: '#/definitions/types.HostPreflightsRecord'
        type: array
      warn:
        items:
          $ref: '#/definitions/types.HostPreflightsRecord'
        type: array
    type: object
  types.HostPreflightsRecord:
    properties:
      message:
        type: string
      title:
        type: string
    type: object
  types.Infra:
    properties:
      components:
        items:
          $ref: '#/definitions/types.InfraComponent'
        type: array
      logs:
        type: string
      status:
        $ref: '#/definitions/types.Status'
    type: object
  types.InfraComponent:
    properties:
      name:
        type: string
      status:
        $ref: '#/definitions/types.Status'
    type: object
  types.InstallHostPreflightsStatusResponse:
    properties:
      allowIgnoreHostPreflights:
        type: boolean
      output:
        $ref: '#/definitions/types.HostPreflightsOutput'
      status:
        $ref: '#/definitions/types.Status'
      titles:
        items:
          type: string
        type: array
    type: object
  types.InstallationConfig:
    properties:
      adminConsolePort:
        type: integer
      dataDirectory:
        type: string
      globalCidr:
        type: string
      httpProxy:
        type: string
      httpsProxy:
        type: string
      localArtifactMirrorPort:
        type: integer
      networkInterface:
        type: string
      noProxy:
        type: string
      podCidr:
        type: string
      serviceCidr:
        type: string
    type: object
  types.PostInstallRunHostPreflightsRequest:
    properties:
      isUi:
        type: boolean
    type: object
  types.State:
    enum:
    - Pending
    - Running
    - Succeeded
    - Failed
    type: string
    x-enum-varnames:
    - StatePending
    - StateRunning
    - StateSucceeded
    - StateFailed
  types.Status:
    properties:
      description:
        type: string
      lastUpdated:
        type: string
      state:
        $ref: '#/definitions/types.State'
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact:
    email: support@replicated.com
    name: API Support
    url: https://github.com/replicatedhq/embedded-cluster/issues
  description: This is the API for the Embedded Cluster project.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Embedded Cluster API
  version: "0.1"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user
      parameters:
      - description: Auth Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.AuthResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.APIError'
      summary: Authenticate a user
      tags:
      - auth
  /health:
    get:
      description: get the health of the API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Health'
      summary: Get the health of the API
      tags:
      - health
  /install/host-preflights/run:
    post:
      consumes:
      - application/json
      description: Run install host preflight checks using installation config and
        client-provided data
      parameters:
      - description: Post Install Run Host Preflights Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.PostInstallRunHostPreflightsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.InstallHostPreflightsStatusResponse'
      security:
      - bearerauth: []
      summary: Run install host preflight checks
      tags:
      - install
  /install/host-preflights/status:
    get:
      description: Get the current status and results of host preflight checks for
        install
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.InstallHostPreflightsStatusResponse'
      security:
      - bearerauth: []
      summary: Get host preflight status for install
      tags:
      - install
  /install/infra/setup:
    post:
      description: Setup infra components
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Infra'
      security:
      - bearerauth: []
      summary: Setup infra components
      tags:
      - install
  /install/infra/status:
    get:
      description: Get the current status of the infra
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Infra'
      security:
      - bearerauth: []
      summary: Get the status of the infra
      tags:
      - install
  /install/installation/config:
    get:
      description: get the installation config
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.InstallationConfig'
      security:
      - bearerauth: []
      summary: Get the installation config
      tags:
      - install
  /install/installation/configure:
    post:
      consumes:
      - application/json
      description: configure the installation for install
      parameters:
      - description: Installation config
        in: body
        name: installationConfig
        required: true
        schema:
          $ref: '#/definitions/types.InstallationConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Status'
      security:
      - bearerauth: []
      summary: Configure the installation for install
      tags:
      - install
  /install/installation/status:
    get:
      description: Get the current status of the installation configuration for install
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Status'
      security:
      - bearerauth: []
      summary: Get installation configuration status for install
      tags:
      - install
  /install/status:
    get:
      description: Get the current status of the install workflow
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Status'
      security:
      - bearerauth: []
      summary: Get the status of the install workflow
      tags:
      - install
    post:
      consumes:
      - application/json
      description: Set the status of the install workflow
      parameters:
      - description: Status
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/types.Status'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Status'
      security:
      - bearerauth: []
      summary: Set the status of the install workflow
      tags:
      - install
swagger: "2.0"
