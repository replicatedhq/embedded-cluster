name: End to End
description: e2e tests for embedded-cluster
inputs:
  test-name:
    description: 'individual test to run'
    required: true
  dr-aws-access-key-id:
    description: 'Disaster Recovery AWS Access Key ID'
    required: true
  dr-aws-secret-access-key:
    description: 'Disaster Recovery AWS Secret Access Key'
    required: true
  k0s-version:
    description: 'k0s version to expect in e2e tests'
    required: true
  k0s-version-previous-1:
    description: 'k0s previous (minor-1) version to expect in e2e tests'
    required: true
  k0s-version-previous-2:
    description: 'k0s previous (minor-2) version to expect in e2e tests'
    required: true
  k0s-version-previous-3:
    description: 'k0s previous (minor-3) version to expect in e2e tests'
    required: true
  k0s-version-previous-stable:
    description: 'k0s previous stable version to expect in e2e tests'
    required: true
  version-specifier:
    description: 'the git sha or tag used to generate application version strings'
    required: true
  github-token:
    description: 'the ci github token used to install the replicated cli'
    required: false # this is only needed for cmx-based tests
  is-lxd:
    description: 'whether the test runs on lxd'
    required: false
    default: 'false'
  cmx-api-token:
    description: 'the token used to access the replicated api for cmx'
    required: false # this is only needed for cmx-based tests
  upgrade-target-ec-version:
    description: 'the embedded cluster version to expect after upgrades complete'
    required: false # this is only set by post-release testing

runs:
  using: composite
  steps:
  - name: Local Setup
    if: ${{ inputs.is-lxd == 'true' }}
    uses: ./.github/actions/e2e-lxd-setup

  - name: CMX Setup
    if: ${{ inputs.is-lxd == 'false' }}
    uses: ./.github/actions/e2e-cmx-setup
    with:
      github-token: ${{ inputs.github-token }}

  - name: Setup Go
    uses: actions/setup-go@v6
    with:
      go-version-file: go.mod
      cache-dependency-path: "**/*.sum"

  - name: E2E
    shell: bash
    run: |
      export SHORT_SHA=${{ inputs.version-specifier }}
      echo "${SHORT_SHA}"
      export REPLICATED_API_TOKEN=${{ inputs.cmx-api-token }}
      export DR_S3_ENDPOINT=https://s3.amazonaws.com
      export DR_S3_REGION=us-east-1
      export DR_S3_BUCKET=kots-testim-snapshots
      export DR_S3_PREFIX=${{ inputs.test-name }}-${{ github.run_id }}-${{ github.run_attempt }}
      export DR_S3_PREFIX_AIRGAP=${{ inputs.test-name }}-${{ github.run_id }}-${{ github.run_attempt }}-airgap
      export DR_ACCESS_KEY_ID=${{ inputs.dr-aws-access-key-id }}
      export DR_SECRET_ACCESS_KEY=${{ inputs.dr-aws-secret-access-key }}
      export EXPECT_K0S_VERSION=${{ inputs.k0s-version }}
      export EXPECT_K0S_VERSION_PREVIOUS_1=${{ inputs.k0s-version-previous-1 }}
      export EXPECT_K0S_VERSION_PREVIOUS_2=${{ inputs.k0s-version-previous-2 }}
      export EXPECT_K0S_VERSION_PREVIOUS_3=${{ inputs.k0s-version-previous-3 }}
      export EXPECT_K0S_VERSION_PREVIOUS_STABLE=${{ inputs.k0s-version-previous-stable }}
      export EXPECT_EMBEDDED_CLUSTER_UPGRADE_TARGET_VERSION=${{ inputs.upgrade-target-ec-version }}
      export CMX_SSH_PUBLIC_KEY="$HOME/.ssh/id_rsa.pub"
      export SKIP_LXD_CLEANUP=true
      export CMX_NODE_NAME="ec-test-suite-$GITHUB_RUN_ID" # to identify the nodes in the admin dashboard
      make e2e-test TEST_NAME=${{ inputs.test-name }}

  - name: Troubleshoot
    if: ${{ !cancelled() }}
    uses: ./.github/actions/e2e-troubleshoot
    with:
      test-name: ${{ inputs.test-name }}
