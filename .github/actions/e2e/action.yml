name: End to End
description: e2e tests for embedded-cluster
inputs:
  test-name:
    description: 'individual test to run'
    required: true
  is-large-runner:
    description: 'Whether the test is running on a large runner'
    required: true
  dr-aws-access-key-id:
    description: 'Disaster Recovery AWS Access Key ID'
    required: true
  dr-aws-secret-access-key:
    description: 'Disaster Recovery AWS Secret Access Key'
    required: true
  k0s-version:
    description: 'k0s version to expect in e2e tests'
    required: true
  k0s-version-previous:
    description: 'k0s previous version to expect in e2e tests'
    required: true
  k0s-version-previous-stable:
    description: 'k0s previous stable version to expect in e2e tests'
    required: true
  version-specifier:
    description: 'the git sha or tag used to generate application version strings'
    required: true
  upgrade-target-ec-version:
    description: 'the embedded cluster version to expect after upgrades complete'
    required: false # this is only set by post-release testing

runs:
  using: composite
  steps:
  - name: Remove MS repo
    shell: bash
    run: |
      apt-add-repository --list
      sudo apt-add-repository -y -r deb [arch=amd64,arm64,armhf] https://packages.microsoft.com/ubuntu/22.04/prod jammy main
      apt-add-repository --list
  - name: Move Docker aside
    shell: bash
    run: |
      sudo systemctl stop docker
      sudo iptables -F
      sudo iptables -P FORWARD ACCEPT
  - name: Install and Configure LXD
    shell: bash
    run: |
      sudo lxd init --auto
      sudo snap set lxd daemon.group=adm
      sudo snap restart lxd
      sudo lxd waitready
  - name: Install and configure OVN
    shell: bash
    run: |
      sudo apt-get update -y
      sudo apt-get install ovn-host ovn-central -y
      sudo ovs-vsctl set open_vswitch .                            \
           external_ids:ovn-remote=unix:/var/run/ovn/ovnsb_db.sock \
           external_ids:ovn-encap-type=geneve                      \
           external_ids:ovn-encap-ip=127.0.0.1
  - name: Free up runner disk space
    uses: ./.github/actions/free-disk-space
  - name: Set AppArmor mode to complain
    shell: bash
    run: |
      sudo apt-get update -y
      sudo apt install apparmor-utils -y
      sudo aa-complain /etc/apparmor.d/*
  - name: Setup Go
    uses: actions/setup-go@v5
    with:
      go-version-file: go.mod
      cache-dependency-path: "**/*.sum"
  - name: E2E
    shell: bash
    run: |
      export SHORT_SHA=${{ inputs.version-specifier }}
      echo "${SHORT_SHA}"
      export DR_AWS_S3_ENDPOINT=https://s3.amazonaws.com
      export DR_AWS_S3_REGION=us-east-1
      export DR_AWS_S3_BUCKET=kots-testim-snapshots
      export DR_AWS_S3_PREFIX=${{ inputs.test-name }}-${{ github.run_id }}-${{ github.run_attempt }}
      export DR_AWS_S3_PREFIX_AIRGAP=${{ inputs.test-name }}-${{ github.run_id }}-${{ github.run_attempt }}-airgap
      export DR_AWS_ACCESS_KEY_ID=${{ inputs.dr-aws-access-key-id }}
      export DR_AWS_SECRET_ACCESS_KEY=${{ inputs.dr-aws-secret-access-key }}
      export EXPECT_K0S_VERSION=${{ inputs.k0s-version }}
      export EXPECT_K0S_VERSION_PREVIOUS=${{ inputs.k0s-version-previous }}
      export EXPECT_K0S_VERSION_PREVIOUS_STABLE=${{ inputs.k0s-version-previous-stable }}
      export EXPECT_EMBEDDED_CLUSTER_UPGRADE_TARGET_VERSION=${{ inputs.upgrade-target-ec-version }}
      export SKIP_LXD_CLEANUP=true
      make e2e-test TEST_NAME=${{ inputs.test-name }}
  - name: Troubleshoot
    if: ${{ !cancelled() }}
    uses: ./.github/actions/e2e-troubleshoot
    with:
      test-name: ${{ inputs.test-name }}
