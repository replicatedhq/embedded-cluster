name: End to End
description: e2e tests for embedded-cluster
inputs:
  test-name:
    description: 'individual test to run'
    required: true
  airgap-license-id:
    description: 'airgap-enabled license id to use for e2e tests'
    required: true
  snapshot-license-id:
    description: 'snapshot-enabled license id to use for e2e tests'
    required: true
  license-id:
    description: 'license id to use for e2e tests'
    required: true
  license:
    description: 'license (b64) to use for e2e tests'
    required: true
  testim-access-token:
    description: 'testim access token'
    required: true
  testim-branch:
    description: 'testim branch'
    required: true

runs:
  using: composite
  steps:
  - name: Remove MS repo
    shell: bash
    run: |
      apt-add-repository --list
      sudo apt-add-repository -y -r deb [arch=amd64,arm64,armhf] https://packages.microsoft.com/ubuntu/22.04/prod jammy main
      apt-add-repository --list
  - name: Move Docker aside
    shell: bash
    run: |
      sudo systemctl stop docker
      sudo iptables -F
      sudo iptables -P FORWARD ACCEPT
  - name: Install and Configure LXD
    shell: bash
    run: |
      sudo lxd init --auto
      sudo snap set lxd daemon.group=adm
      sudo snap restart lxd
      sudo lxd waitready
  - name: Install and configure OVN
    shell: bash
    run: |
      sudo apt-get update -y
      sudo apt-get install ovn-host ovn-central -y
      sudo ovs-vsctl set open_vswitch .                            \
           external_ids:ovn-remote=unix:/var/run/ovn/ovnsb_db.sock \
           external_ids:ovn-encap-type=geneve                      \
           external_ids:ovn-encap-ip=127.0.0.1
  - name: Free up runner disk space
    shell: bash
    run: |
      sudo rm -rf /usr/local/lib/android
      sudo rm -rf /opt/hostedtoolcache/CodeQL
      sudo rm -rf /opt/hostedtoolcache/Python
  - name: Set AppArmor mode to complain
    shell: bash
    run: |
      sudo apt-get update -y
      sudo apt install apparmor-utils -y
      sudo aa-complain /etc/apparmor.d/*
  - name: E2E
    shell: bash
    run: |
      export SHORT_SHA=dev-$(git rev-parse --short=7 HEAD)
      export LICENSE_ID=${{ inputs.license-id }}
      export AIRGAP_LICENSE_ID=${{ inputs.airgap-license-id }}
      export SNAPSHOT_LICENSE_ID=${{ inputs.snapshot-license-id }}
      echo "${{ inputs.license }}" | base64 --decode > e2e/license.yaml
      export TESTIM_ACCESS_TOKEN=${{ inputs.testim-access-token }}
      export TESTIM_BRANCH=${{ inputs.testim-branch }}
      make e2e-test TEST_NAME=${{ inputs.test-name }}
  - name: Upload Host Support Bundle
    uses: actions/upload-artifact@v4
    if: ${{ failure() }}
    with:
      name: ${{ github.job }}-support-bundle-host.tar.gz
      path: ./e2e/support-bundle-host.tar.gz
  - name: Upload Cluster Support Bundle
    uses: actions/upload-artifact@v4
    if: ${{ failure() }}
    with:
      name: ${{ github.job }}-support-bundle-cluster.tar.gz
      path: ./e2e/support-bundle-cluster.tar.gz
#  - name: Setup upterm session (ssh)
#    uses: lhotari/action-upterm@v1
#    if: always()
