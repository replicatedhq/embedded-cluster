name: E2E Troubleshoot
description: Troubleshoot e2e tests for embedded-cluster
inputs:
  test-name:
    description: 'individual test to troubleshoot'
    required: true

runs:
  using: composite
  steps:
  - name: Upload Host Support Bundle
    id: upload-host-support-bundle
    uses: actions/upload-artifact@v5
    with:
      name: ${{ inputs.test-name }}-support-bundle-host.tar.gz
      path: ./e2e/support-bundle-host-*.tar.gz

  - name: Upload Cluster Support Bundle
    id: upload-cluster-support-bundle
    uses: actions/upload-artifact@v5
    with:
      name: ${{ inputs.test-name }}-support-bundle-cluster.tar.gz
      path: ./e2e/support-bundle-cluster.tar.gz

  - name: Upload Playwright Report
    id: upload-playwright-report
    uses: actions/upload-artifact@v5
    with:
      name: ${{ inputs.test-name }}-playwright-report.tar.gz
      path: ./e2e/playwright-report.tar.gz

  - name: Print instructions for host support bundle
    if: ${{ steps.upload-host-support-bundle.outputs.artifact-url != '' }}
    run: |
      echo -e "\e[1;33m┌──────────────────────────────────────────────────────────────────────────────────────────────────────┐\e[0m"
      echo -e "\e[1;33m                            Download the host support bundle from:                                      \e[0m"
      echo -e "\e[1;33m                                                                                                        \e[0m"
      echo -e "\e[1;34m      ${{ steps.upload-host-support-bundle.outputs.artifact-url }}                                      \e[0m"
      echo -e "\e[1;33m                                                                                                        \e[0m"
      echo -e "\e[1;33m└──────────────────────────────────────────────────────────────────────────────────────────────────────┘\e[0m"
    shell: bash

  - name: Print instructions for cluster support bundle
    if: ${{ steps.upload-cluster-support-bundle.outputs.artifact-url != '' }}
    run: |
      echo -e "\e[1;33m┌──────────────────────────────────────────────────────────────────────────────────────────────────────┐\e[0m"
      echo -e "\e[1;33m                            To analyze the cluster support bundle:                                      \e[0m"
      echo -e "\e[1;33m                                                                                                        \e[0m"
      echo -e "\e[1;33m   1- Download & extract the support bundle from:                                                       \e[0m"
      echo -e "\e[1;33m                                                                                                        \e[0m"
      echo -e "\e[1;34m      ${{ steps.upload-cluster-support-bundle.outputs.artifact-url }}                                   \e[0m"
      echo -e "\e[1;33m                                                                                                        \e[0m"
      echo -e "\e[1;33m   2- Install sbctl CLI from:                                                                           \e[0m"
      echo -e "\e[1;33m                                                                                                        \e[0m"
      echo -e "\e[1;34m      https://github.com/replicatedhq/sbctl                                                             \e[0m"
      echo -e "\e[1;33m                                                                                                        \e[0m"
      echo -e "\e[1;33m   3- From inside the extracted directory, run:                                                         \e[0m"
      echo -e "\e[1;33m                                                                                                        \e[0m"
      echo -e "\e[1;32m      sbctl shell .                                                                                     \e[0m"
      echo -e "\e[1;33m                                                                                                        \e[0m"
      echo -e "\e[1;33m   4- Run kubectl commands in the new shell and run `exit` once done                                    \e[0m"
      echo -e "\e[1;33m                                                                                                        \e[0m"
      echo -e "\e[1;33m└──────────────────────────────────────────────────────────────────────────────────────────────────────┘\e[0m"
    shell: bash

  - name: Print instructions to view Playwright report
    if: ${{ steps.upload-playwright-report.outputs.artifact-url != '' }}
    run: |
      echo -e "\e[1;33m┌──────────────────────────────────────────────────────────────────────────────────────────────────────┐\e[0m"
      echo -e "\e[1;33m                                  To view the Playwright test report:                                   \e[0m"
      echo -e "\e[1;33m                                                                                                        \e[0m"
      echo -e "\e[1;33m   1- Download & extract the report from:                                                               \e[0m"
      echo -e "\e[1;33m                                                                                                        \e[0m"
      echo -e "\e[1;34m      ${{ steps.upload-playwright-report.outputs.artifact-url }}                                        \e[0m"
      echo -e "\e[1;33m                                                                                                        \e[0m"
      echo -e "\e[1;33m   2- From inside the extracted directory, run:                                                         \e[0m"
      echo -e "\e[1;33m                                                                                                        \e[0m"
      echo -e "\e[1;32m      npx playwright show-report .                                                                      \e[0m"
      echo -e "\e[1;33m                                                                                                        \e[0m"
      echo -e "\e[1;33m└──────────────────────────────────────────────────────────────────────────────────────────────────────┘\e[0m"
    shell: bash

  # - name: Setup upterm session (ssh)
  #   uses: lhotari/action-upterm@v1
  #   if: failure()
  #   with:
  #     ## If no one connects after 5 minutes, shut down server.
  #     wait-timeout-minutes: 5
