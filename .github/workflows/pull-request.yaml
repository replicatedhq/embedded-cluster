name: Pull request
on:
- pull_request
jobs:
  sanitize:
    name: Sanitize
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: "1.21.0"
    - name: Go vet
      run: |
        make vet
    - name: Lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.54
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: "1.21.0"
    - name: Go vet
      run: |
       make vet
    - name: Unit tests
      run: |
        make unit-tests
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Get short commit hash
      run: echo "SHORT_SHA=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: "1.21.0"
    - name: Build Linux AMD64
      run: |
        make embedded-cluster-linux-amd64 VERSION=dev-$SHORT_SHA
        ./output/bin/embedded-cluster version metadata > metadata.json

    - name: Cache files
      if: github.actor != 'dependabot[bot]'
      env:
        S3_BUCKET: "tf-infra-staging-emb-cluster-bin"
        AWS_ACCESS_KEY_ID: ${{ secrets.INFRA_EMBEDDED_CLUSTER_UPLOAD_IAM_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.INFRA_EMBEDDED_CLUSTER_UPLOAD_IAM_SECRET }}
        AWS_REGION: "us-east-1"
      run: |
        export EC_VERSION="dev-metadata"
        ./scripts/cache-files.sh

    - name: Cache files for integration test
      if: github.actor != 'dependabot[bot]'
      env:
        S3_BUCKET: "tf-staging-embedded-cluster-bin"
        AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_EMBEDDED_CLUSTER_UPLOAD_IAM_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_EMBEDDED_CLUSTER_UPLOAD_IAM_SECRET }}
        AWS_REGION: "us-east-1"
      run: |
        export EC_VERSION="dev-metadata"
        ./scripts/cache-files.sh
  e2e:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tests:
          - TestSingleNodeInstallation
          - TestSingleNodeInstallationRockyLinux8
          - TestSingleNodeInstallationDebian12
          - TestSingleNodeInstallationCentos8Stream
          - TestVersion
          - TestMultiNodeInteractiveInstallation
          - TestInstallWithDisabledAddons
          - TestHostPreflight
          - TestUnsupportedOverrides
          - TestMultiNodeInstallation
          - TestMultiNodeReset
          - TestCommandsRequireSudo
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - uses: ./.github/actions/e2e
      with:
        test-env: 'onpr'
        test-name: '${{ matrix.tests }}'
