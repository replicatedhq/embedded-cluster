apiVersion: troubleshoot.sh/v1beta2
kind: SupportBundle
metadata:
  name: embedded-cluster-cluster-support-bundle
  labels:
    troubleshoot.io/kind: support-bundle
spec:
  uri: https://raw.githubusercontent.com/replicatedhq/embedded-cluster/main/operator/charts/embedded-cluster-operator/troubleshoot/cluster-support-bundle.yaml
  collectors:
  - clusterInfo: {}
  - clusterResources:
      namespaces:
      - kube-system
      - kube-node-lease
      - kube-public
      - openebs
      - registry
      - embedded-cluster
      - seaweedfs
      - kotsadm
      - default
      - velero
      - k0s-autopilot
  - logs:
      name: podlogs/embedded-cluster-operator
      namespace: embedded-cluster
      selector:
      - app.kubernetes.io/name=embedded-cluster-operator
      limits:
        maxAge: 720h
  - logs:
      name: podlogs/embedded-cluster-operator
      namespace: embedded-cluster
      selector:
        - app.kubernetes.io/name=embedded-cluster-upgrade
      limits:
        maxAge: 720h
  - logs:
      name: podlogs/kotsadm
      namespace: kotsadm
      selector:
        - app.kubernetes.io/name=kotsadm
      limits:
        maxAge: 720h
  - logs:
      name: podlogs/calico-kube-controllers
      namespace: kube-system
      selector:
      - k8s-app=calico-kube-controllers
      limits:
        maxAge: 720h
  - logs:
      name: podlogs/calico-node
      namespace: kube-system
      selector:
      - k8s-app=calico-node
      limits:
        maxAge: 720h
  - logs:
      name: podlogs/coredns
      namespace: kube-system
      selector:
      - k8s-app=kube-dns
      limits:
        maxAge: 720h
  - logs:
      name: podlogs/kube-proxy
      namespace: kube-system
      selector:
      - k8s-app=kube-proxy
      limits:
        maxAge: 720h
  - logs:
      name: podlogs/metrics-server
      namespace: kube-system
      selector:
      - k8s-app=metrics-server
      limits:
        maxAge: 720h
  - logs:
      name: podlogs/openebs
      namespace: openebs
      selector:
      - app=localpv-provisioner
      limits:
        maxAge: 720h
  - logs:
      name: podlogs/registry
      namespace: registry
      selector:
      - app=docker-registry
      limits:
        maxAge: 720h
  - logs:
      name: podlogs/seaweedfs
      namespace: seaweedfs
      selector:
      - app.kubernetes.io/component=objectstorage-provisioner
      limits:
        maxAge: 720h
  - logs:
      name: podlogs/seaweedfs
      namespace: seaweedfs
      selector:
      - app.kubernetes.io/component=filer
      limits:
        maxAge: 720h
  - logs:
      name: podlogs/seaweedfs
      namespace: seaweedfs
      selector:
      - app.kubernetes.io/component=master
      limits:
        maxAge: 720h
  - logs:
      name: podlogs/seaweedfs
      namespace: seaweedfs
      selector:
      - app.kubernetes.io/component=s3
      limits:
        maxAge: 720h
  - logs:
      name: podlogs/seaweedfs
      namespace: seaweedfs
      selector:
      - app.kubernetes.io/component=volume
      limits:
        maxAge: 720h
  analyzers:
  - textAnalyze:
      checkName: Cluster installation status
      fileName: cluster-resources/custom-resources/installations.embeddedcluster.replicated.com.yaml
      regex: 'state: Installed'
      outcomes:
      - fail:
          when: "false"
          message: Cluster installation in 'Installed' state not found
      - pass:
          when: "true"
          message: Cluster installation in 'Installed' state found
  - textAnalyze:
      checkName: "OpenEBS Local PV provisioner"
      regex: "Failed to provision Local PV"
      ignoreIfNoFiles: true
      fileName: podlogs/openebs/openebs-localpv-provisioner-*/openebs-localpv-provisioner.log
      outcomes:
      - fail:
          when: "true"
          message: "OpenEBS Local Provisioner is failing to provision PVs"
      - pass:
          when: "false"
          message: "OpenEBS Local Provisioner is provisioning PVs"
  - textAnalyze:
      checkName: "CoreDNS nameserver configuration"
      regex: "no nameservers found"
      ignoreIfNoFiles: true
      fileName: podlogs/coredns/coredns-*/coredns.log
      outcomes:
      - fail:
          when: "true"
          message: "CoreDNS reported missing nameserver configuration. Ensure /etc/resolv.conf has at least 1 'nameserver' configured"
      - pass:
          when: "false"
          message: "CoreDNS found valid nameserver configuration"
