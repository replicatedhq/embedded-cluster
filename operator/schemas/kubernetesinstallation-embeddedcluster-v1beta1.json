{
  "description": "KubernetesInstallation is the Schema for the kubernetes installations API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "KubernetesInstallationSpec defines the desired state of KubernetesInstallation.",
      "type": "object",
      "properties": {
        "adminConsole": {
          "description": "AdminConsole holds the Admin Console configuration.",
          "type": "object",
          "properties": {
            "port": {
              "description": "Port holds the port on which the admin console will be served.",
              "type": "integer"
            }
          }
        },
        "airGap": {
          "description": "AirGap indicates if the installation is airgapped.",
          "type": "boolean"
        },
        "binaryName": {
          "description": "BinaryName holds the name of the binary used to install the cluster.\nthis will follow the pattern 'appslug-channelslug'",
          "type": "string"
        },
        "clusterID": {
          "description": "ClusterID holds the cluster id, generated during the installation.",
          "type": "string"
        },
        "config": {
          "description": "Config holds the configuration used at installation time.",
          "type": "object",
          "properties": {
            "binaryOverrideUrl": {
              "type": "string"
            },
            "domains": {
              "type": "object",
              "properties": {
                "proxyRegistryDomain": {
                  "type": "string"
                },
                "replicatedAppDomain": {
                  "type": "string"
                },
                "replicatedRegistryDomain": {
                  "type": "string"
                }
              }
            },
            "extensions": {
              "type": "object",
              "properties": {
                "helm": {
                  "description": "Helm contains helm extension settings",
                  "type": "object",
                  "properties": {
                    "charts": {
                      "type": "array",
                      "items": {
                        "description": "Chart single helm addon",
                        "type": "object",
                        "properties": {
                          "chartname": {
                            "type": "string"
                          },
                          "forceUpgrade": {
                            "description": "ForceUpgrade when set to false, disables the use of the \"--force\" flag when upgrading the the chart (default: true).",
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          },
                          "order": {
                            "type": "integer"
                          },
                          "timeout": {
                            "description": "Timeout specifies the timeout for how long to wait for the chart installation to finish.\nA duration string is a sequence of decimal numbers, each with optional fraction and a unit suffix, such as \"300ms\" or \"2h45m\". Valid time units are \"ns\", \"us\" (or \"Âµs\"), \"ms\", \"s\", \"m\", \"h\".",
                            "type": "string",
                            "x-kubernetes-int-or-string": true
                          },
                          "values": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "concurrencyLevel": {
                      "type": "integer"
                    },
                    "repositories": {
                      "type": "array",
                      "items": {
                        "description": "Repository describes single repository entry. Fields map to the CLI flags for the \"helm add\" command",
                        "type": "object",
                        "required": [
                          "name",
                          "url"
                        ],
                        "properties": {
                          "caFile": {
                            "description": "CA bundle file to use when verifying HTTPS-enabled servers.",
                            "type": "string"
                          },
                          "certFile": {
                            "description": "The TLS certificate file to use for HTTPS client authentication.",
                            "type": "string"
                          },
                          "insecure": {
                            "description": "Whether to skip TLS certificate checks when connecting to the repository.",
                            "type": "boolean"
                          },
                          "keyfile": {
                            "description": "The TLS key file to use for HTTPS client authentication.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The repository name.",
                            "type": "string",
                            "minLength": 1
                          },
                          "password": {
                            "description": "Password for Basic HTTP authentication.",
                            "type": "string"
                          },
                          "url": {
                            "description": "The repository URL.",
                            "type": "string",
                            "minLength": 1
                          },
                          "username": {
                            "description": "Username for Basic HTTP authentication.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "metadataOverrideUrl": {
              "type": "string"
            },
            "roles": {
              "description": "Roles is the various roles in the cluster.",
              "type": "object",
              "properties": {
                "controller": {
                  "description": "NodeRole is the role of a node in the cluster.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "nodeCount": {
                      "description": "NodeCount holds a series of rules for a given node role.",
                      "type": "object",
                      "properties": {
                        "range": {
                          "description": "NodeRange contains a min and max or only one of them (conflicts\nwith Values).",
                          "type": "object",
                          "properties": {
                            "max": {
                              "description": "Max is the maximum number of nodes.",
                              "type": "integer"
                            },
                            "min": {
                              "description": "Min is the minimum number of nodes.",
                              "type": "integer"
                            }
                          }
                        },
                        "values": {
                          "description": "Values holds a list of allowed node counts.",
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "custom": {
                  "type": "array",
                  "items": {
                    "description": "NodeRole is the role of a node in the cluster.",
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "nodeCount": {
                        "description": "NodeCount holds a series of rules for a given node role.",
                        "type": "object",
                        "properties": {
                          "range": {
                            "description": "NodeRange contains a min and max or only one of them (conflicts\nwith Values).",
                            "type": "object",
                            "properties": {
                              "max": {
                                "description": "Max is the maximum number of nodes.",
                                "type": "integer"
                              },
                              "min": {
                                "description": "Min is the minimum number of nodes.",
                                "type": "integer"
                              }
                            }
                          },
                          "values": {
                            "description": "Values holds a list of allowed node counts.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "unsupportedOverrides": {
              "description": "UnsupportedOverrides holds the config overrides used to configure\nthe cluster.",
              "type": "object",
              "properties": {
                "builtInExtensions": {
                  "description": "BuiltInExtensions holds overrides for the default add-ons we ship\nwith Embedded Cluster.",
                  "type": "array",
                  "items": {
                    "description": "BuiltInExtension holds the override for a built-in extension (add-on).",
                    "type": "object",
                    "required": [
                      "name",
                      "values"
                    ],
                    "properties": {
                      "name": {
                        "description": "The name of the helm chart to override values of, for instance `openebs`.",
                        "type": "string"
                      },
                      "values": {
                        "description": "YAML-formatted helm values that will override those provided to the\nchart by Embedded Cluster. Properties are overridden individually -\nsetting a new value for `images.tag` here will not prevent Embedded\nCluster from setting `images.pullPolicy = IfNotPresent`, for example.",
                        "type": "string"
                      }
                    }
                  }
                },
                "k0s": {
                  "description": "K0s holds the overrides used to configure k0s. These overrides\nare merged on top of the default k0s configuration. As the data\nlayout inside this configuration is very dynamic we have chosen\nto use a string here.",
                  "type": "string"
                }
              }
            },
            "version": {
              "type": "string"
            }
          }
        },
        "highAvailability": {
          "description": "HighAvailability indicates if the installation is high availability.",
          "type": "boolean"
        },
        "licenseInfo": {
          "description": "LicenseInfo holds information about the license used to install the cluster.",
          "type": "object",
          "properties": {
            "isDisasterRecoverySupported": {
              "type": "boolean"
            },
            "isMultiNodeEnabled": {
              "type": "boolean"
            }
          }
        },
        "manager": {
          "description": "Manager holds the Manager configuration.",
          "type": "object",
          "properties": {
            "port": {
              "description": "Port holds the port on which the manager will be served.",
              "type": "integer"
            }
          }
        },
        "metricsBaseURL": {
          "description": "MetricsBaseURL holds the base URL for the metrics server.",
          "type": "string"
        },
        "proxy": {
          "description": "Proxy holds the proxy configuration.",
          "type": "object",
          "properties": {
            "httpProxy": {
              "type": "string"
            },
            "httpsProxy": {
              "type": "string"
            },
            "noProxy": {
              "type": "string"
            },
            "providedNoProxy": {
              "type": "string"
            }
          }
        }
      }
    },
    "status": {
      "description": "KubernetesInstallationStatus defines the observed state of KubernetesInstallation",
      "type": "object",
      "properties": {
        "reason": {
          "description": "Reason holds the reason for the current state.",
          "type": "string"
        },
        "state": {
          "description": "State holds the current state of the installation.",
          "type": "string"
        }
      }
    }
  }
}