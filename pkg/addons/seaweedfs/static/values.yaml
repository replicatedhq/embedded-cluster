#
# this file is automatically generated by the buildtools utility. Manual edits to this file
# are not recommended and may be overwritten. to regenerate this file, please execute the
# following commands:
#
# $ make buildtools
# $ output/bin/buildtools update addon <addon name>
#
# should you need to modify any configurations or settings within this file, please update
# the values.tpl.yaml file located in the same directory. after making the necessary changes,
# regenerate this file using the aforementioned commands to ensure all modifications are
# correctly applied.
#
global:
  enableReplication: true
  replicationPlacment: "001"
  registry: "proxy.replicated.com/anonymous/"
master:
  imageOverride: 'proxy.replicated.com/anonymous/chrislusf/seaweedfs:3.71@sha256:2829e52cd2f653cfb900cbbbc72f4c3fda0e8ab785429a80514090cdd73dec8c'
  replicas: 1
  disableHttp: true
  volumeSizeLimitMB: 30000
  data:
    hostPathPrefix: "/var/lib/embedded-cluster/seaweedfs/ssd"
  logs:
    hostPathPrefix: "/var/lib/embedded-cluster/seaweedfs/storage"
  config: |-
    [master.maintenance]
    # periodically run these scripts are the same as running them from 'weed shell'
    # note: running 'fs.meta.save' then 'fs.meta.load' will ensure metadata of all filers
    # are in sync in case of data loss from 1 or more filers
    scripts = """
      ec.encode -fullPercent=95 -quietFor=1h
      ec.rebuild -force
      ec.balance -force
      volume.balance -force
      volume.configure.replication -replication 001 -collectionPattern *
      volume.fix.replication
      fs.meta.save -o filer-backup.meta
      fs.meta.load filer-backup.meta
    """
    sleep_minutes = 17          # sleep minutes between each script execution
volume:
  # replicas must be at least replication (2) + 1 = 3
  replicas: 3
  imageOverride: 'proxy.replicated.com/anonymous/chrislusf/seaweedfs:3.71@sha256:2829e52cd2f653cfb900cbbbc72f4c3fda0e8ab785429a80514090cdd73dec8c'
  podAnnotations:
    backup.velero.io/backup-volumes: data
  affinity: |
    # schedule on control-plane nodes
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/control-plane
            operator: Exists
    # schedule on different nodes when possible
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - seaweedfs
            - key: app.kubernetes.io/component
              operator: In
              values:
              - volume
          topologyKey: "kubernetes.io/hostname"
  dataDirs:
  - name: data
    type: "persistentVolumeClaim"
    # openebs-hostpath storage does not limit the size of the volume
    size: "10Gi"
    storageClass: "openebs-hostpath"
    # set this to a high number so we dont have to worry about storage limit (50 * 30GB = 1500GB)
    maxVolumes: 50
filer:
  replicas: 3
  imageOverride: 'proxy.replicated.com/anonymous/chrislusf/seaweedfs:3.71@sha256:2829e52cd2f653cfb900cbbbc72f4c3fda0e8ab785429a80514090cdd73dec8c'
  podAnnotations:
    backup.velero.io/backup-volumes: data-filer,seaweedfs-filer-log-volume
  data:
    type: "persistentVolumeClaim"
    # openebs-hostpath storage does not limit the size of the volume
    size: "1Gi"
    storageClass: "openebs-hostpath"
  logs:
    type: "persistentVolumeClaim"
    # openebs-hostpath storage does not limit the size of the volume
    size: "1Gi"
    storageClass: "openebs-hostpath"
  s3:
    enabled: true
    enableAuth: true
    existingConfigSecret: secret-seaweedfs-s3
    createBuckets:
    - name: registry
      anonymousRead: false
